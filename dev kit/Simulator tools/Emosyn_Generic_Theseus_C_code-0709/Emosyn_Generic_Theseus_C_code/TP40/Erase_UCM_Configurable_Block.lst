C51 COMPILER V8.05a   ERASE_UCM_CONFIGURABLE_BLOCK                                         05/08/2007 13:43:24 PAGE 1   


C51 COMPILER V8.05a, COMPILATION OF MODULE ERASE_UCM_CONFIGURABLE_BLOCK
OBJECT MODULE PLACED IN .\Erase_UCM_Configurable_Block.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\Common\Erase_UCM_Configurable_Block.c BROWSE INTVECTOR(0X8000) DEBUG OBJ
                    -ECTEXTEND PRINT(.\Erase_UCM_Configurable_Block.lst) OBJECT(.\Erase_UCM_Configurable_Block.obj)

line level    source

   1          /******************************************************************************
   2          *
   3          * Name:         Erase_UCM_Configurable_Block.c
   4          * Description:  Contains function to erase a 1K UCM configurable block on the
   5          *               TP40, TP50 and TP62 chips
   6          * Copyright:    Emosyn Inc. 2005
   7          *
   8          * The Example Code herein below is provided "AS IS" and at your sole risk.  
   9          * As to this Code, EMOSYN expressly disclaims all warranties, including, but
  10          * not limited to the implied warranties of merchantability and fitness for a
  11          * particular purpose. EMOSYN does not warrant that the functions contained in
  12          * this code will meet your requirements, or that the operation of the code will
  13          * be accurate, error-free, or non-infringing. No oral or written information or
  14          * advice given by EMOSYN or an authorized representative shall create or affect
  15          * any Warranty.
  16          *******************************************************************************
  17          * $Revision: 1.2 $
  18          * $Author: amorris $ 
  19          * $Date: 2005/10/26 09:40:36 $
  20          ******************************************************************************/
  21          
  22          
  23          /******************************************************************************
  24          * Header file inclusions
  25          ******************************************************************************/
  26          #include "Firmware_API_JumpTable.h"
  27          #include "Emosyn_Helper_Functions.h"
  28          
  29          
  30          /******************************************************************************
  31          * External and local function declarations 
  32          ******************************************************************************/
  33          
  34          
  35          /******************************************************************************
  36          * External variable declarations
  37          ******************************************************************************/
  38          
  39          
  40          /******************************************************************************
  41          *
  42          * Function Name:      Erase_UCM_Configurable_Block
  43          * Function Inputs:    void
  44          * Function Outputs:   uint SW1SW2  9000h for success or 6581h for failure
  45          * Description:        Erases a specified 1K UCM configurable block
  46          *
  47          * APDU Syntax:        E5 2A PARA1 PARA2 PARA3
  48          * APDU Inputs:        PARA1  High byte of the UCM configurable block address
  49          *                     PARA2  Low byte of the UCM configurable block address
  50          * APDU Outputs:       None
  51          
  52          * Example usage:      Erase the UCM configurable block starting at address A000h
  53          * To Card             ->  E5 2A A0 00 00
  54          * ACK from Card       <-  2A
C51 COMPILER V8.05a   ERASE_UCM_CONFIGURABLE_BLOCK                                         05/08/2007 13:43:24 PAGE 2   

  55          * Response from Card  <-  90 00
  56          *
  57          ******************************************************************************/
  58          uint Erase_UCM_Configurable_Block (void)
  59          {
  60   1          /* Actual firmware API call */
  61   1          cRet_Val_Char = Firmware_EraseConfigBlock (Conv_Two_Bytes_To_Int (PARA1, PARA2));
  62   1      
  63   1           /* Check the firmware call result */
  64   1          if (MSB_SET & cRet_Val_Char)
  65   1          {
  66   2              SW1SW2 = SW1SW2_MEMORY_ERROR;   /* If MSB of return value set it */
  67   2          }                                   /* indicates a memory operation error */
  68   1          else
  69   1          {
  70   2              SW1SW2 = SW1SW2_OK;         /* Firmware return value was 0 or the number */
  71   2          }                               /* of pulses required for memory operation */
  72   1      
  73   1          return SW1SW2;
  74   1      
  75   1      } /* End of function */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     42    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
