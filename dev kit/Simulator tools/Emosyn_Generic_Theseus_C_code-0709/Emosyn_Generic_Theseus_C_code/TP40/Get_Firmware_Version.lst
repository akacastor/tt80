C51 COMPILER V8.05a   GET_FIRMWARE_VERSION                                                 05/08/2007 13:43:22 PAGE 1   


C51 COMPILER V8.05a, COMPILATION OF MODULE GET_FIRMWARE_VERSION
OBJECT MODULE PLACED IN .\Get_Firmware_Version.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\Common\Get_Firmware_Version.c BROWSE INTVECTOR(0X8000) DEBUG OBJECTEXTEN
                    -D PRINT(.\Get_Firmware_Version.lst) OBJECT(.\Get_Firmware_Version.obj)

line level    source

   1          /******************************************************************************
   2          *
   3          * Name:         Get_Firmware_Version.c
   4          * Description:  Contains function to output the chip firmware version
   5          * Copyright:    Emosyn Inc. 2005
   6          *
   7          * The Example Code herein below is provided "AS IS" and at your sole risk.  
   8          * As to this Code, EMOSYN expressly disclaims all warranties, including, but
   9          * not limited to the implied warranties of merchantability and fitness for a
  10          * particular purpose. EMOSYN does not warrant that the functions contained in
  11          * this code will meet your requirements, or that the operation of the code will
  12          * be accurate, error-free, or non-infringing. No oral or written information or
  13          * advice given by EMOSYN or an authorized representative shall create or affect
  14          * any Warranty.
  15          *******************************************************************************
  16          * $Revision: 1.2 $
  17          * $Author: chin $ 
  18          * $Date: 2005/10/25 16:47:31 $
  19          ******************************************************************************/
  20          
  21          
  22          /******************************************************************************
  23          * Header file inclusions
  24          ******************************************************************************/
  25          #include "Firmware_API_JumpTable.h"
  26          #include "Emosyn_Helper_Functions.h"
  27          
  28          
  29          /******************************************************************************
  30          * External and local function declarations 
  31          ******************************************************************************/
  32          
  33          
  34          /******************************************************************************
  35          * External variable declarations
  36          ******************************************************************************/
  37          
  38          
  39          /******************************************************************************
  40          *
  41          * Function Name:      Get_Firmware_Version
  42          * Function Inputs:    void
  43          * Function Outputs:   uint SW1SW2  9000h for success
  44          *                                  6C00h for wrong LE
  45          * Description:        Outputs the chip firmware version to the serial port
  46          *
  47          * APDU Syntax:        E5 1E 00 00 01
  48          * APDU Inputs:        None
  49          * APDU Outputs:       Chip firmware version
  50          *
  51          * Example usage:      Get the chip firmware version
  52          * To Card             ->  E5 1E 00 00 01
  53          * ACK from Card       <-  1E
  54          * Data from Card      <-  Firmware version number
C51 COMPILER V8.05a   GET_FIRMWARE_VERSION                                                 05/08/2007 13:43:22 PAGE 2   

  55          * Response from Card  <-  90 00
  56          *
  57          ******************************************************************************/
  58          uint Get_Firmware_Version (void)
  59          {
  60   1          if (PARA3 == 0x01)
  61   1          {
  62   2              /* Actual firmware API call */
  63   2              PutChar (Firmware_GetFirmwareVersion()); 
  64   2      
  65   2              SW1SW2 = SW1SW2_OK;
  66   2          }
  67   1      
  68   1          else
  69   1          {
  70   2              SW1SW2 = SW1SW2_WRONG_LE_LENGTH;
  71   2          }
  72   1      
  73   1          return SW1SW2;
  74   1      
  75   1      } /* End of function */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     33    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
