C51 COMPILER V8.05a   SET_EXECUTE_ONLY_STATUS                                              05/08/2007 13:43:19 PAGE 1   


C51 COMPILER V8.05a, COMPILATION OF MODULE SET_EXECUTE_ONLY_STATUS
OBJECT MODULE PLACED IN .\Set_Execute_Only_Status.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\Common\Set_Execute_Only_Status.c BROWSE INTVECTOR(0X8000) DEBUG OBJECTEX
                    -TEND PRINT(.\Set_Execute_Only_Status.lst) OBJECT(.\Set_Execute_Only_Status.obj)

line level    source

   1          /******************************************************************************
   2          *
   3          * Name:         Set_Execute_Only_Status.c
   4          * Description:  Contains function to set the execute only flag on the user 
   5          *               specified memory blocks
   6          * Copyright:    Emosyn Inc. 2005
   7          *
   8          * The Example Code herein below is provided "AS IS" and at your sole risk.  
   9          * As to this Code, EMOSYN expressly disclaims all warranties, including, but
  10          * not limited to the implied warranties of merchantability and fitness for a
  11          * particular purpose. EMOSYN does not warrant that the functions contained in
  12          * this code will meet your requirements, or that the operation of the code will
  13          * be accurate, error-free, or non-infringing. No oral or written information or
  14          * advice given by EMOSYN or an authorized representative shall create or affect
  15          * any Warranty.
  16          *******************************************************************************
  17          * $Revision: 1.5 $
  18          * $Author: chin $ 
  19          * $Date: 2005/10/31 10:02:29 $
  20          ******************************************************************************/
  21          
  22          
  23          /******************************************************************************
  24          * Header file inclusions
  25          ******************************************************************************/
  26          #include "Firmware_API_JumpTable.h"
  27          #include "Emosyn_Helper_Functions.h"
  28          
  29          
  30          /******************************************************************************
  31          * External and local function declarations 
  32          ******************************************************************************/
  33          
  34          
  35          /******************************************************************************
  36          * External variable declarations
  37          ******************************************************************************/
  38          
  39          
  40          /******************************************************************************
  41          *
  42          * Function Name:      Set_Execute_Only_Status
  43          * Function Inputs:    void
  44          * Function Outputs:   uint SW1SW2  9000h for success or
  45          *                                  6581h for memory failure or
  46          *                                  6700h for wrong LC
  47          * Description:        Sets the execute only flag on the user specified memory
  48          *                     blocks, this will allow the code to be executed but will
  49          *                     not allow the code space to be read by the user
  50          *
  51          * APDU Syntax:        E5 12 00 PARA2 02
  52          * APDU Inputs:        PARA2      Temporary (0) or Persistent (1) setting
  53          *                     DataByte1  High byte of Set Protect Status memory block
  54          *                     DataByte2  Low byte of Set Protect Status memory block
C51 COMPILER V8.05a   SET_EXECUTE_ONLY_STATUS                                              05/08/2007 13:43:19 PAGE 2   

  55          * APDU Outputs:       None
  56          *
  57          * Example usage:      Set DC00 -> E7FF on the TP50 as Execute Only, (non permanent)
  58          * To Card             ->  E5 12 00 00 02
  59          * ACK from Card       <-  12
  60          * Data to Card        ->  00 E0
  61          * Response from Card  <-  90 00
  62          *
  63          ******************************************************************************/
  64          uint Set_Execute_Only_Status (void)
  65          {
  66   1          if (PARA3 == 0x02) /* Only allow 2 bytes (LC) for input */
  67   1          {
  68   2              Serial_Receive_X_Bytes (0x02, &TEMP_BUF); /* Get the additional data bytes */
  69   2      
  70   2              /* Actual firmware API call */
  71   2              cRet_Val_Char = Firmware_SetExecuteOnlyStatus (Conv_Two_Bytes_To_Int (TEMPVARIABLE1, TEMPVARIABLE2
             -), PARA2);
  72   2      
  73   2              /* Check the firmware call result */
  74   2              if (MSB_SET & cRet_Val_Char)
  75   2              {
  76   3                  SW1SW2 = SW1SW2_MEMORY_ERROR;   /* If MSB of return value set it */
  77   3              }                                   /* indicates a memory operation error */
  78   2              else
  79   2              {
  80   3                  SW1SW2 = SW1SW2_OK;         /* Firmware return value was 0 or the number */
  81   3              }                               /* of pulses required for memory operation */
  82   2          }
  83   1      
  84   1          else
  85   1          {
  86   2              SW1SW2 = SW1SW2_WRONG_LC_LENGTH;    /* Wrong amount of input bytes */
  87   2          }
  88   1      
  89   1          return SW1SW2;
  90   1      
  91   1      } /* End of function */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     66    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
