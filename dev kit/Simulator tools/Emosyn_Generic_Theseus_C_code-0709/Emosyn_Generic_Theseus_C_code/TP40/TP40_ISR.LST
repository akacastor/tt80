C51 COMPILER V8.05a   TP40_ISR                                                             05/08/2007 13:43:10 PAGE 1   


C51 COMPILER V8.05a, COMPILATION OF MODULE TP40_ISR
OBJECT MODULE PLACED IN TP40_ISR.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE TP40_ISR.c BROWSE INTVECTOR(0X8000) DEBUG OBJECTEXTEND

line level    source

   1          /******************************************************************************
   2          *
   3          * Name:         TT40_ISR.c
   4          * Description:  Contains Interrupt Service Routines for the TT40
   5          * Copyright:    Emosyn Inc. 2005
   6          *
   7          * The Example Code herein below is provided "AS IS" and at your sole risk.  
   8          * As to this Code, EMOSYN expressly disclaims all warranties, including, but
   9          * not limited to the implied warranties of merchantability and fitness for a
  10          * particular purpose. EMOSYN does not warrant that the functions contained in
  11          * this code will meet your requirements, or that the operation of the code will
  12          * be accurate, error-free, or non-infringing. No oral or written information or
  13          * advice given by EMOSYN or an authorized representative shall create or affect
  14          * any Warranty.
  15          *******************************************************************************
  16          * $Revision: 1.1 $
  17          * $Author: chin $ 
  18          * $Date: 2005/08/09 11:53:42 $
  19          ******************************************************************************/
  20          
  21          
  22          /******************************************************************************
  23          * Header file inclusions
  24          ******************************************************************************/
  25          #include "Firmware_API_JumpTable.h"
  26          #include "Emosyn_Helper_Functions.h"
  27          
  28          
  29          /******************************************************************************
  30          * External and local function declarations 
  31          ******************************************************************************/
  32          
  33          
  34          /******************************************************************************
  35          * External variable declarations
  36          ******************************************************************************/
  37          
  38          
  39          /******************************************************************************
  40          *
  41          * Keil's C driven ISR use the "interrupt X" syntax at the end of the function
  42          * declartion. X is the Keil specific interrupt number.
  43          * Listed below is the interrupt number based on the interrupt vector address
  44          *
  45          * 0   0003h    8   0043h    16  0083h    24  00C3h
  46          * 1   000Bh    9   004Bh    17  008Bh    25  00CBh
  47          * 2   0013h    10  0053h    18  0093h    26  00D3h
  48          * 3   001Bh    11  005Bh    19  009Bh    27  00DBh
  49          * 4   0023h    12  0063h    20  00A3h    28  00E3h
  50          * 5   002Bh    13  006Bh    21  00ABh    29  00EBh
  51          * 6   0033h    14  0073h    22  00B3h    30  00F3h
  52          * 7   003Bh    15  007Bh    23  00BBh    31  00FBh
  53          *
  54          * The saving of the ACC, B, DPTR, PSW and registers are performed automatically
  55          * by the compiler
C51 COMPILER V8.05a   TP40_ISR                                                             05/08/2007 13:43:10 PAGE 2   

  56          ******************************************************************************/
  57          
  58          
  59          /******************************************************************************
  60          *
  61          * Function Name:     Serial_ISR
  62          * Function Inputs:   void
  63          * Function Outputs:  void
  64          * Description:       Code that executes when the serial receive interrupt occurs
  65          *
  66          ******************************************************************************/
  67          void Serial_ISR (void) interrupt 4
  68          {
  69   1      
  70   1      } /* End of function */
  71          
  72          
  73          /******************************************************************************
  74          *
  75          * Function Name:     Security_Fault_ISR
  76          * Function Inputs:   void
  77          * Function Outputs:  void
  78          * Description:       Code that executes when the security interrupt occurs
  79          *
  80          ******************************************************************************/
  81          void Security_Fault_ISR (void) interrupt 5
  82          {
  83   1          PutChar (0x2B);             /* Output 2Bh to identify ISR 2Bh has executed */
  84   1      
  85   1          PutChar (SECURITYSTATUS);   /* Output the Security Status sfr */
  86   1      
  87   1          SECURITYSTATUS = 0;         /* Clear the Security Status sfr */
  88   1      
  89   1      } /* End of function */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     70    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
