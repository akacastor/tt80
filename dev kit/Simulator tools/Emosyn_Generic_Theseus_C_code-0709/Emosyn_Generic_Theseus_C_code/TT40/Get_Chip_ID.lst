C51 COMPILER V8.05a   GET_CHIP_ID                                                          05/29/2007 11:00:56 PAGE 1   


C51 COMPILER V8.05a, COMPILATION OF MODULE GET_CHIP_ID
OBJECT MODULE PLACED IN .\Get_Chip_ID.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\Common\Get_Chip_ID.c OMF2 OPTIMIZE(SIZE) BROWSE INTVECTOR(0X0400) MODDP2
                    - DEBUG PRINT(.\Get_Chip_ID.lst) OBJECT(.\Get_Chip_ID.obj)

line level    source

   1          /******************************************************************************
   2          *
   3          * Name:         Get_Chip_ID.c
   4          * Description:  Contains function to output the chips unique 8 byte ID
   5          * Copyright:    Emosyn Inc. 2005
   6          *
   7          * The Example Code herein below is provided "AS IS" and at your sole risk.  
   8          * As to this Code, EMOSYN expressly disclaims all warranties, including, but
   9          * not limited to the implied warranties of merchantability and fitness for a
  10          * particular purpose. EMOSYN does not warrant that the functions contained in
  11          * this code will meet your requirements, or that the operation of the code will
  12          * be accurate, error-free, or non-infringing. No oral or written information or
  13          * advice given by EMOSYN or an authorized representative shall create or affect
  14          * any Warranty.
  15          *******************************************************************************
  16          * $Revision: 1.4 $
  17          * $Author: chin $ 
  18          * $Date: 2005/11/01 18:43:48 $
  19          ******************************************************************************/
  20          
  21          
  22          /******************************************************************************
  23          * Header file inclusions
  24          ******************************************************************************/
  25          #include "Firmware_API_JumpTable.h"
  26          #include "Emosyn_Helper_Functions.h"
  27          
  28          
  29          /******************************************************************************
  30          * External and local function declarations 
  31          ******************************************************************************/
  32          
  33          
  34          /******************************************************************************
  35          * External variable declarations
  36          ******************************************************************************/
  37          
  38          
  39          /******************************************************************************
  40          *
  41          * Function Name:      Get_Chip_ID
  42          * Function Inputs:    void
  43          * Function Outputs:   uint SW1SW2  9000h for success or 
  44          *                                  6C00h for wrong LE
  45          * Description:        Outputs the chips unique 8 byte ID to the serial port
  46          *
  47          * APDU Syntax:        E5 0A 00 00 08
  48          * APDU Inputs:        None
  49          * APDU Outputs:       8 byte chip ID
  50          *
  51          * Example usage:      Output the chips ID
  52          * To Card             ->  E5 0A 00 00 08
  53          * ACK from Card       <-  0A
  54          * Data from card      <-  8 byte chip ID
C51 COMPILER V8.05a   GET_CHIP_ID                                                          05/29/2007 11:00:56 PAGE 2   

  55          * Response from Card  <-  90 00
  56          *
  57          ******************************************************************************/
  58          uint Get_Chip_ID (void)
  59          {
  60   1          if (PARA3 == TEMP_BUFFER_SIZE) /* Only allow eight byte response */
  61   1          {   
  62   2                  for (ucCount = 0; ucCount < TEMP_BUFFER_SIZE; ucCount++)   /* Clear the buffer with 0x00 pattern */
  63   2                  {
  64   3                      TEMP_BUF[ucCount] = 0x00;
  65   3                  }
  66   2              
  67   2                  Firmware_GetChipID (&TEMP_BUF);     /* Actual firmware API call */
  68   2              
  69   2                  Serial_Transmit_X_Bytes (TEMP_BUFFER_SIZE, &TEMP_BUF);  /* Tranmsit the data */
  70   2      
  71   2                      SW1SW2 = SW1SW2_OK;
  72   2          }
  73   1      
  74   1              else
  75   1          {
  76   2              SW1SW2 = SW1SW2_WRONG_LE_LENGTH;                
  77   2          }
  78   1      
  79   1          return SW1SW2;
  80   1      
  81   1      } /* End of function */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     63    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
