C51 COMPILER V8.05a   GET_CLOCK_SOURCE                                                     04/16/2007 10:41:00 PAGE 1   


C51 COMPILER V8.05a, COMPILATION OF MODULE GET_CLOCK_SOURCE
OBJECT MODULE PLACED IN .\Get_Clock_Source.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\Common\Get_Clock_Source.c OMF2 OPTIMIZE(SIZE) BROWSE INTVECTOR(0X0800) M
                    -ODDP2 DEBUG PRINT(.\Get_Clock_Source.lst) OBJECT(.\Get_Clock_Source.obj)

line level    source

   1          /******************************************************************************
   2          *
   3          * Name:         Get_Clock_Source.c
   4          * Description:  Contains function to output the Clock Source Select SFR value
   5          * Copyright:    Emosyn Inc. 2005
   6          *
   7          * The Example Code herein below is provided "AS IS" and at your sole risk.  
   8          * As to this Code, EMOSYN expressly disclaims all warranties, including, but
   9          * not limited to the implied warranties of merchantability and fitness for a
  10          * particular purpose. EMOSYN does not warrant that the functions contained in
  11          * this code will meet your requirements, or that the operation of the code will
  12          * be accurate, error-free, or non-infringing. No oral or written information or
  13          * advice given by EMOSYN or an authorized representative shall create or affect
  14          * any Warranty.
  15          *******************************************************************************
  16          * $Revision: 1.2 $
  17          * $Author: chin $ 
  18          * $Date: 2005/10/25 16:47:59 $
  19          ******************************************************************************/
  20          
  21          
  22          /******************************************************************************
  23          * Header file inclusions
  24          ******************************************************************************/
  25          #include "Firmware_API_JumpTable.h"
  26          #include "Emosyn_Helper_Functions.h"
  27          
  28          
  29          /******************************************************************************
  30          * External and local function declarations 
  31          ******************************************************************************/
  32          
  33          
  34          /******************************************************************************
  35          *
  36          * Function Name:      Get_Clock_Source
  37          * Function Inputs:    void
  38          * Function Outputs:   uint SW1SW2  9000h for success or
  39          *                                  6C00h for wrong LE
  40          * Description:        Outputs the Clock Source Select SFR to the serial port
  41          *
  42          * APDU Syntax:        E5 0C 00 00 01
  43          * APDU Inputs:        None
  44          * APDU Outputs:       Value of the Clock Source Select SFR
  45          *
  46          * Example usage:      Output the Clock Source Select SFR value to the serial port
  47          * To Card             ->  E5 0C 00 00 01
  48          * ACK from Card       <-  0C
  49          * Data from Card      <-  XX (value of the Clock Source Select SFR)
  50          * Response from Card  <-  90 00
  51          *
  52          ******************************************************************************/
  53          uint Get_Clock_Source (void)
  54          {
C51 COMPILER V8.05a   GET_CLOCK_SOURCE                                                     04/16/2007 10:41:00 PAGE 2   

  55   1          if (PARA3 == 0x01)
  56   1          {
  57   2              /* Output the Clock source select SFR value */
  58   2              PutChar (Firmware_GetClockSourceSelectSFR());
  59   2          
  60   2              SW1SW2 = SW1SW2_OK;
  61   2          }
  62   1          else
  63   1          {
  64   2              SW1SW2 = SW1SW2_WRONG_LE_LENGTH;
  65   2          }
  66   1      
  67   1          return SW1SW2;
  68   1      
  69   1      } /* End of function */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     33    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
