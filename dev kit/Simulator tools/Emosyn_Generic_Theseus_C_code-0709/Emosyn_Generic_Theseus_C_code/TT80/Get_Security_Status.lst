C51 COMPILER V8.05a   GET_SECURITY_STATUS                                                  04/16/2007 10:40:58 PAGE 1   


C51 COMPILER V8.05a, COMPILATION OF MODULE GET_SECURITY_STATUS
OBJECT MODULE PLACED IN .\Get_Security_Status.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\Common\Get_Security_Status.c OMF2 OPTIMIZE(SIZE) BROWSE INTVECTOR(0X0800
                    -) MODDP2 DEBUG PRINT(.\Get_Security_Status.lst) OBJECT(.\Get_Security_Status.obj)

line level    source

   1          /******************************************************************************
   2          *
   3          * Name:         Get_Security_Status.c
   4          * Description:  Contains function to output Security status SFR
   5          * Copyright:    Emosyn Inc. 2005
   6          *
   7          * The Example Code herein below is provided "AS IS" and at your sole risk.  
   8          * As to this Code, EMOSYN expressly disclaims all warranties, including, but
   9          * not limited to the implied warranties of merchantability and fitness for a
  10          * particular purpose. EMOSYN does not warrant that the functions contained in
  11          * this code will meet your requirements, or that the operation of the code will
  12          * be accurate, error-free, or non-infringing. No oral or written information or
  13          * advice given by EMOSYN or an authorized representative shall create or affect
  14          * any Warranty.
  15          *******************************************************************************
  16          * $Revision: 1.2 $
  17          * $Author: chin $ 
  18          * $Date: 2005/11/08 17:05:50 $
  19          ******************************************************************************/
  20          
  21          
  22          /******************************************************************************
  23          * Header file inclusions
  24          ******************************************************************************/
  25          #include "Firmware_API_JumpTable.h"
  26          #include "Emosyn_Helper_Functions.h"
  27          
  28          
  29          /******************************************************************************
  30          * External and local function declarations 
  31          ******************************************************************************/
  32          
  33          
  34          /******************************************************************************
  35          * External variable declarations
  36          ******************************************************************************/
  37          
  38          
  39          /******************************************************************************
  40          *
  41          * Function Name:      Get_Security_Status
  42          * Function Inputs:    void
  43          * Function Outputs:   uint SW1SW2  9000h for success or
  44          *                                  6C00h for wrong LE
  45          * Description:        Outputs the value of the current SECSTA SFR
  46          *
  47          * APDU Syntax:        E5 44 00 00 01
  48          * APDU Inputs:        None
  49          * APDU Outputs:       Value of the Security Status sfr
  50          *
  51          * Example usage:      Outputs the value of the current SECSTA SFR
  52          * To Card             ->  E5 44 00 00 01
  53          * ACK from Card       <-  44
  54          * Data from Card      <-  00
C51 COMPILER V8.05a   GET_SECURITY_STATUS                                                  04/16/2007 10:40:58 PAGE 2   

  55          * Response from Card  <-  9000
  56          *
  57          ******************************************************************************/
  58          uint Get_Security_Status (void)
  59          {
  60   1          if (PARA3 == 0x01)
  61   1          {
  62   2              PutChar (SECURITYSTATUS);           /* Output the SECSTA sfr */
  63   2      
  64   2              SW1SW2 = SW1SW2_OK;
  65   2          }
  66   1          else
  67   1          {
  68   2              SW1SW2 = SW1SW2_WRONG_LE_LENGTH;    /* Only allow a LE of 1 */
  69   2          }
  70   1      
  71   1          return SW1SW2;
  72   1      
  73   1      
  74   1      } /* End of function */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     32    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
