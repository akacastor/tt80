AX51 MACRO ASSEMBLER  SOFTWARE_APIS_CODE_SPACE                                              04/16/07 10:40:58 PAGE     1


MACRO ASSEMBLER AX51 V3.01a
OBJECT MODULE PLACED IN .\Software_APIs_CODE_Space.obj
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\AX51.EXE ..\Common\Software_APIs_CODE_Space.a51 SET(SMALL) DEBUG PRINT(.\Software_
                      APIs_CODE_Space.lst) OBJECT(.\Software_APIs_CODE_Space.obj) EP

LOC    OBJ             LINE     SOURCE

                          1     
                          2     
                          3     
                          4     
                          5     
                          6     
                          7     
                          8     
                          9     
                         10     
                         11     
                         12     
                         13     
                         14     
                         15     
                         16     
                         17     
                         18     
                         19     
                         20     
                         21     
                         22     ;$include (../Common_Titanium/Theseus_Titanium_Family.h)
                    +1   23     
                    +1   24     
                    +1   25     
                    +1   26     
                    +1   27     
                    +1   28     
                    +1   29     
                    +1   30     
                    +1   31     
                    +1   32     
                    +1   33     
                    +1   34     
                    +1   35     
                    +1   36     
                    +1   37     
                    +1   38     
                    +1   39     
                    +1   40     
                    +1   41     
                    +1   42     
                    +1   43     
                    +1   44     
                    +1   45     
                    +1   46     
                    +1   47     
                    +1   48     
                    +1   49     
                    +1   50     
                    +1   51     
                    +1   52     
                    +1   53     
                    +1   54     
                    +1   55     
  0080              +1   56     sfr NVFSMCON       = 0x80;
  0081              +1   57     sfr SP             = 0x81;
AX51 MACRO ASSEMBLER  SOFTWARE_APIS_CODE_SPACE                                              04/16/07 10:40:58 PAGE     2

  0082              +1   58     sfr DPL            = 0x82;
  0083              +1   59     sfr DPH            = 0x83;
  0082              +1   60     sfr DPL0           = 0x82;
  0083              +1   61     sfr DPH0           = 0x83;
  0084              +1   62     sfr DPL1           = 0x84;
  0085              +1   63     sfr DPH1           = 0x85;
  0086              +1   64     sfr DPS            = 0x86;
  0087              +1   65     sfr PCON           = 0x87;
  0088              +1   66     sfr TCON           = 0x88;
  0089              +1   67     sfr TMOD           = 0x89;
  008A              +1   68     sfr TL0            = 0x8A;
  008B              +1   69     sfr TL1            = 0x8B;
  008C              +1   70     sfr TH0            = 0x8C;
  008D              +1   71     sfr TH1            = 0x8D;
                    +1   72     
                    +1   73     
                    +1   74     
                    +1   75     
  0093              +1   76     sfr DPX            = 0x93;
  0093              +1   77     sfr DPX0           = 0x93;
  0095              +1   78     sfr DPX1           = 0x95;
                    +1   79     
                    +1   80     
                    +1   81     
                    +1   82     
  0098              +1   83     sfr SCON           = 0x98;
  0099              +1   84     sfr SBUF           = 0x99;
                    +1   85     
  00A1              +1   86     sfr CBSL           = 0xA1;
  00A2              +1   87     sfr MPTR           = 0xA2;
  00A8              +1   88     sfr IE             = 0xA8;
                    +1   89     
  00B0              +1   90     sfr SECURITYSTATUS = 0xB0;
  00B2              +1   91     sfr ISOCON         = 0xB2;
  00B4              +1   92     sfr ISOTMR         = 0xB4;
  00B8              +1   93     sfr IP             = 0xB8;
                    +1   94     
  00C0              +1   95     sfr PROGIO         = 0xC0;
                    +1   96     
  00C9              +1   97     sfr NvFsmMode      = 0xC9;
                    +1   98     
  00D0              +1   99     sfr PSW            = 0xD0;
  00D8              +1  100     sfr SPSW           = 0xD8;
                    +1  101     
  00E0              +1  102     sfr ACC            = 0xE0;
  00E8              +1  103     sfr EPSW           = 0xE8;
                    +1  104     
  00EA              +1  105     sfr MPTRX          = 0xEA;
                    +1  106     
  00F0              +1  107     sfr B              = 0xF0;
                    +1  108     
                    +1  109     
                    +1  110     
                    +1  111     
  00F7              +1  112     sfr MFCON          = 0xF7;
                    +1  113     
                    +1  114     
                    +1  115     
                    +1  116     
                    +1  117     
                    +1  118     
                    +1  119     
                    +1  120     
                    +1  121     
                    +1  122     
00D0.7              +1  123     sbit CY            = PSW^7;
AX51 MACRO ASSEMBLER  SOFTWARE_APIS_CODE_SPACE                                              04/16/07 10:40:58 PAGE     3

00D0.6              +1  124     sbit AC            = PSW^6;
00D0.5              +1  125     sbit F0            = PSW^5;
00D0.4              +1  126     sbit RS1           = PSW^4;
00D0.3              +1  127     sbit RS0           = PSW^3;
00D0.2              +1  128     sbit OV            = PSW^2;
                    +1  129     
00D0.0              +1  130     sbit P             = PSW^0; 
                    +1  131     
                    +1  132     
                    +1  133     
                    +1  134     
0098.1              +1  135     sbit TI            = SCON^1;
0098.0              +1  136     sbit RI            = SCON^0;
                    +1  137     
                    +1  138     
                    +1  139     
                    +1  140     
0088.7              +1  141     sbit TF1           = TCON^7;
0088.6              +1  142     sbit TR1           = TCON^6;
0088.5              +1  143     sbit TF0           = TCON^5;
0088.4              +1  144     sbit TR0           = TCON^4;
0088.3              +1  145     sbit MFLT          = TCON^3;
0088.1              +1  146     sbit SINT          = TCON^1;
0088.1              +1  147     sbit USINT         = TCON^1;
0088.0              +1  148     sbit SSINT         = TCON^0;
                    +1  149     
                    +1  150     
                    +1  151     
                    +1  152     
00E8.0              +1  153     sbit AM            = EPSW^0;
00E8.1              +1  154     sbit F1            = EPSW^1;
                    +1  155     
                    +1  156     
                    +1  157     
                    +1  158     
                    +1  159     
0080.0              +1  160     sbit FSM_FINISH    = NVFSMCON^0;
0080.1              +1  161     sbit FSM_START     = NVFSMCON^1;
0080.5              +1  162     sbit FSM_RESULT    = NVFSMCON^5;
                    +1  163     
                    +1  164     
                    +1  165     
                    +1  166     
00C0.0              +1  167     sbit PULLUP_RES_STATE = PROGIO^0;
                    +1  168     
                    +1  169     
                    +1  170     
                    +1  171     
                    +1  172     
                    +1  173     
                    +1  174     
                    +1  175     
                    +1  176     
                        177     
                        178     
                        179     extrn code (Firmware_WriteByteUCM_In_CODE_Space)
                        180     
                        181     
                        182     ; Library Functions
                        183     Public Firmware_WriteUCM_In_CODE_Space, _Firmware_WriteUCM_In_CODE_Space
                        184     Public Firmware_WriteEE_In_CODE_Space, _Firmware_WriteEE_In_CODE_Space
                        185     
                        186     
------                  187     ?PR?Software_APIs_CODE_Space_Segment?Software_APIs_CODE_Space SEGMENT CODE
------                  188             RSEG     ?PR?Software_APIs_CODE_Space_Segment?Software_APIs_CODE_Space
                        189     
AX51 MACRO ASSEMBLER  SOFTWARE_APIS_CODE_SPACE                                              04/16/07 10:40:58 PAGE     4

                        190     using 0
                        191     
000000                  192     _Firmware_WriteUCM_In_CODE_Space:
000000                  193     Firmware_WriteUCM_In_CODE_Space:                        ; Created as a software library 
                               for backwards
000000                  194     _Firmware_WriteEE_In_CODE_Space:                        ; Theseus Platinum API compatibi
                               lity
000000                  195     Firmware_WriteEE_In_CODE_Space:
                        196     
000000 A805             197             mov     R0,AR5                                  ; Backup the IDATA buffer addres
                               s
                        198     
000002                  199     Firmware_WriteNVM_In_CODE_Space_Loop:
000002 E6               200             mov     A,@R0                                   ; Read the byte from IDATA pinte
                               d to by R0
000003 FD               201             mov     R5,A                                    ; Move the actual data byte into
                                R5
                        202     
000004 120000     E     203             lcall   Firmware_WriteByteUCM_In_CODE_Space     ; Call the single byte write to 
                               UCM function
                        204                                                             ; This function is expecting the
                                target address
                        205                                                             ; in R6 & R7 and the data byte t
                               o write in R5
                        206     
000007 EF               207             mov     A,R7                                    ; Check the return value of the 
                               single write byte
000008 5480             208             anl     A,#80h                                  ; firmware call, if MSB is set i
                               t indicates error
00000A 700D             209             jnz     Firmware_WriteNVM_Return_Fail           ; It will exit the function on e
                               rror
                        210     
00000C 08               211             inc     R0                                      ; Point to next IDATA buffer loc
                               ation containing data
                        212     
00000D A3               213             inc     DPTR                                    ; Increment destination address
00000E AE83             214             mov     R6,DPH                                  ; Load the address pointer into 
                               R6 & R7 as the
000010 AF82             215             mov     R7,DPL                                  ; Firmware_WriteByteUCM function
                                expects it there
                        216     
000012 DBEE             217             djnz    R3,Firmware_WriteNVM_In_CODE_Space_Loop ; Keep writing until all the byt
                               es (R3 - number of
                        218                                                             ; of bytes) have been written
                        219     
000014 8000             220             sjmp    Firmware_WriteNVM_Return_Success        ; If this point is reached all b
                               ytes were written successfully
                        221     
                        222     
000016                  223     Firmware_WriteNVM_Return_Success:
000016 7F00             224             mov     R7,#0h
000018 22               225             ret
                        226     
000019                  227     Firmware_WriteNVM_Return_Fail:
000019 7FFF             228             mov     R7,#0FFh
00001B 22               229             ret
                        230     
                        231     
                        232     END
AX51 MACRO ASSEMBLER  SOFTWARE_APIS_CODE_SPACE                                              04/16/07 10:40:58 PAGE     5

SYMBOL TABLE LISTING
------ ----- -------


N A M E                                    T Y P E  V A L U E     ATTRIBUTES

?PR?SOFTWARE_APIS_CODE_SPACE_SEGMENT?SOFTWAC  SEG _C00001CHCE     REL=UNIT, ALN=BYTE
_FIRMWARE_WRITEEE_IN_CODE_SPACE . . . .    C  ADDR  0000H     R   SEG=?PR?SOFTWARE_APIS_CODE_SPACE_SEGMENT?SOFTWARE_APIS
                                    AX51 MA_CODE_SPACE
_FIRMWARE_WRITEUCM_IN_CODE_SPACE. . . .    C  ADDR  0000H     R   SEG=?PR?SOFTWARE_APIS_CODE_SPACE_SEGMENT?SOFTWARE_APIS
                                    AX51 MA_CODE_SPACE
AC. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.6   A   
ACC . . . . . . . . . . . . . . . . . .    D  ADDR  00E0H     A   
AM. . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.0   A   
AR5 . . . . . . . . . . . . . . . . . .    D  ADDR  0005H     A   
B . . . . . . . . . . . . . . . . . . .    D  ADDR  00F0H     A   
CBSL. . . . . . . . . . . . . . . . . .    D  ADDR  00A1H     A   
CY. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.7   A   
DPH . . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH0. . . . . . . . . . . . . . . . . .    D  ADDR  0083H     A   
DPH1. . . . . . . . . . . . . . . . . .    D  ADDR  0085H     A   
DPL . . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL0. . . . . . . . . . . . . . . . . .    D  ADDR  0082H     A   
DPL1. . . . . . . . . . . . . . . . . .    D  ADDR  0084H     A   
DPS . . . . . . . . . . . . . . . . . .    D  ADDR  0086H     A   
DPX . . . . . . . . . . . . . . . . . .    D  ADDR  0093H     A   
DPX0. . . . . . . . . . . . . . . . . .    D  ADDR  0093H     A   
DPX1. . . . . . . . . . . . . . . . . .    D  ADDR  0095H     A   
EPSW. . . . . . . . . . . . . . . . . .    D  ADDR  00E8H     A   
F0. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.5   A   
F1. . . . . . . . . . . . . . . . . . .    B  ADDR  00E8H.1   A   
FIRMWARE_WRITEBYTEUCM_IN_CODE_SPACE . .    C  ADDR  -------       EXT
FIRMWARE_WRITEEE_IN_CODE_SPACE. . . . .    C  ADDR  0000H     R   SEG=?PR?SOFTWARE_APIS_CODE_SPACE_SEGMENT?SOFTWARE_APIS
                                    AX51 MA_CODE_SPACE
FIRMWARE_WRITENVM_IN_CODE_SPACE_LOOP. .    C  ADDR  0002H     R   SEG=?PR?SOFTWARE_APIS_CODE_SPACE_SEGMENT?SOFTWARE_APIS
                                    AX51 MA_CODE_SPACE
FIRMWARE_WRITENVM_RETURN_FAIL . . . . .    C  ADDR  0019H     R   SEG=?PR?SOFTWARE_APIS_CODE_SPACE_SEGMENT?SOFTWARE_APIS
                                    AX51 MA_CODE_SPACE
FIRMWARE_WRITENVM_RETURN_SUCCESS. . . .    C  ADDR  0016H     R   SEG=?PR?SOFTWARE_APIS_CODE_SPACE_SEGMENT?SOFTWARE_APIS
                                    AX51 MA_CODE_SPACE
FIRMWARE_WRITEUCM_IN_CODE_SPACE . . . .    C  ADDR  0000H     R   SEG=?PR?SOFTWARE_APIS_CODE_SPACE_SEGMENT?SOFTWARE_APIS
                                    AX51 MA_CODE_SPACE
FSM_FINISH. . . . . . . . . . . . . . .    B  ADDR  0080H.0   A   
FSM_RESULT. . . . . . . . . . . . . . .    B  ADDR  0080H.5   A   
FSM_START . . . . . . . . . . . . . . .    B  ADDR  0080H.1   A   
IE. . . . . . . . . . . . . . . . . . .    D  ADDR  00A8H     A   
IP. . . . . . . . . . . . . . . . . . .    D  ADDR  00B8H     A   
ISOCON. . . . . . . . . . . . . . . . .    D  ADDR  00B2H     A   
ISOTMR. . . . . . . . . . . . . . . . .    D  ADDR  00B4H     A   
MFCON . . . . . . . . . . . . . . . . .    D  ADDR  00F7H     A   
MFLT. . . . . . . . . . . . . . . . . .    B  ADDR  0088H.3   A   
MPTR. . . . . . . . . . . . . . . . . .    D  ADDR  00A2H     A   
MPTRX . . . . . . . . . . . . . . . . .    D  ADDR  00EAH     A   
NVFSMCON. . . . . . . . . . . . . . . .    D  ADDR  0080H     A   
NVFSMMODE . . . . . . . . . . . . . . .    D  ADDR  00C9H     A   
OV. . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.2   A   
P . . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.0   A   
PCON. . . . . . . . . . . . . . . . . .    D  ADDR  0087H     A   
PROGIO. . . . . . . . . . . . . . . . .    D  ADDR  00C0H     A   
PSW . . . . . . . . . . . . . . . . . .    D  ADDR  00D0H     A   
PULLUP_RES_STATE. . . . . . . . . . . .    B  ADDR  00C0H.0   A   
RI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.0   A   
RS0 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.3   A   
RS1 . . . . . . . . . . . . . . . . . .    B  ADDR  00D0H.4   A   
SBUF. . . . . . . . . . . . . . . . . .    D  ADDR  0099H     A   
SCON. . . . . . . . . . . . . . . . . .    D  ADDR  0098H     A   
AX51 MACRO ASSEMBLER  SOFTWARE_APIS_CODE_SPACE                                              04/16/07 10:40:58 PAGE     6

SECURITYSTATUS. . . . . . . . . . . . .    D  ADDR  00B0H     A   
SINT. . . . . . . . . . . . . . . . . .    B  ADDR  0088H.1   A   
SP. . . . . . . . . . . . . . . . . . .    D  ADDR  0081H     A   
SPSW. . . . . . . . . . . . . . . . . .    D  ADDR  00D8H     A   
SSINT . . . . . . . . . . . . . . . . .    B  ADDR  0088H.0   A   
TCON. . . . . . . . . . . . . . . . . .    D  ADDR  0088H     A   
TF0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.5   A   
TF1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.7   A   
TH0 . . . . . . . . . . . . . . . . . .    D  ADDR  008CH     A   
TH1 . . . . . . . . . . . . . . . . . .    D  ADDR  008DH     A   
TI. . . . . . . . . . . . . . . . . . .    B  ADDR  0098H.1   A   
TL0 . . . . . . . . . . . . . . . . . .    D  ADDR  008AH     A   
TL1 . . . . . . . . . . . . . . . . . .    D  ADDR  008BH     A   
TMOD. . . . . . . . . . . . . . . . . .    D  ADDR  0089H     A   
TR0 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.4   A   
TR1 . . . . . . . . . . . . . . . . . .    B  ADDR  0088H.6   A   
USINT . . . . . . . . . . . . . . . . .    B  ADDR  0088H.1   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S).
