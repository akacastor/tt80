C51 COMPILER V8.05a   WRITE_UCM_BYTES_FLASH_MODE_FROM_IRAM_BUFF                            04/16/2007 10:40:58 PAGE 1   


C51 COMPILER V8.05a, COMPILATION OF MODULE WRITE_UCM_BYTES_FLASH_MODE_FROM_IRAM_BUFF
OBJECT MODULE PLACED IN .\Write_UCM_Bytes_Flash_Mode_From_IRAM_Buffer.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\Common\Write_UCM_Bytes_Flash_Mode_From_IRAM_Buffer.c OMF2 OPTIMIZE(SIZE)
                    - BROWSE INTVECTOR(0X0800) MODDP2 DEBUG PRINT(.\Write_UCM_Bytes_Flash_Mode_From_IRAM_Buffer.lst) OBJECT(.\Write_UCM_Bytes
                    -_Flash_Mode_From_IRAM_Buffer.obj)

line level    source

   1          /******************************************************************************
   2          *
   3          * Name:         Write_UCM_Bytes_Flash_Mode_From_IRAM_Buffer.c
   4          * Description:  Contains function to write to UCM using data held in IDATA
   5          * Copyright:    Emosyn Inc. 2005
   6          *
   7          * The Example Code herein below is provided "AS IS" and at your sole risk.  
   8          * As to this Code, EMOSYN expressly disclaims all warranties, including, but
   9          * not limited to the implied warranties of merchantability and fitness for a
  10          * particular purpose. EMOSYN does not warrant that the functions contained in
  11          * this code will meet your requirements, or that the operation of the code will
  12          * be accurate, error-free, or non-infringing. No oral or written information or
  13          * advice given by EMOSYN or an authorized representative shall create or affect
  14          * any Warranty.
  15          *******************************************************************************
  16          * $Revision: 1.5 $
  17          * $Author: amorris $ 
  18          * $Date: 2005/10/25 16:58:26 $
  19          ******************************************************************************/
  20          
  21          
  22          /******************************************************************************
  23          * Header file inclusions
  24          ******************************************************************************/
  25          #include "Firmware_API_JumpTable.h"
  26          #include "Emosyn_Helper_Functions.h"
  27          
  28          
  29          /******************************************************************************
  30          * External and local function declarations 
  31          ******************************************************************************/
  32          
  33          
  34          /******************************************************************************
  35          * External variable declarations
  36          ******************************************************************************/
  37          
  38          
  39          /******************************************************************************
  40          *
  41          * Function Name:      Write_UCM_Bytes_Flash_Mode_From_IRAM_Buffer
  42          * Function Inputs:    void
  43          * Function Outputs:   uint SW1SW2  9000h for success or 6581h for failure
  44          * Description:        Writes bytes from IDATA memory to UCM
  45          *
  46          * APDU Syntax:        E5 20 PARA1 PARA2 02
  47          * APDU Inputs:        PARA1      High byte of the UCM address in XDATA space
  48          *                     PARA2      Low byte of the UCM address in XDATA space
  49          *                     DataByte1  IDATA source address of the Data to write
  50          *                     DataByte2  Number of bytes to write
  51          * APDU Outputs:       None
  52          *
  53          * Example usage:      Write 20h bytes to UCM (starting at 6000h in XDATA space)
C51 COMPILER V8.05a   WRITE_UCM_BYTES_FLASH_MODE_FROM_IRAM_BUFF                            04/16/2007 10:40:58 PAGE 2   

  54          *                     from IDATA starting at 40h
  55          * To Card             ->  E5 20 60 00 02
  56          * ACK from Card       <-  20
  57          * Data to Card        ->  40 20
  58          * Response from Card  <-  90 00
  59          *
  60          ******************************************************************************/
  61          uint Write_UCM_Bytes_Flash_Mode_From_IRAM_Buffer (void)
  62          {
  63   1          if (PARA3 == 0x02)
  64   1          {
  65   2              /* Get the additional data bytes (address of Idata source and number of bytes to copy) */
  66   2              Serial_Receive_X_Bytes (0x02, &TEMP_BUF);
  67   2      
  68   2              /* Actual firmware API call */
  69   2              cRet_Val_Char = Firmware_WriteUCM (Conv_Two_Bytes_To_Int (PARA1, PARA2), TEMPVARIABLE1, TEMPVARIAB
             -LE2);
  70   2      
  71   2              if (MSB_SET & cRet_Val_Char) 
  72   2              {
  73   3                  SW1SW2 = SW1SW2_MEMORY_ERROR;   /* If MSB of return value is set it */
  74   3              }                                   /* indicates a memory error */
  75   2              else
  76   2              {
  77   3                  SW1SW2 = SW1SW2_OK;         /* Firmware return value was 0 or the number */
  78   3              }                               /* of pulses required for memory operation */
  79   2          }
  80   1      
  81   1          else
  82   1          {
  83   2              SW1SW2 = SW1SW2_WRONG_LC_LENGTH;    /* Wrong amount of input bytes */
  84   2          }
  85   1      
  86   1          return SW1SW2;
  87   1      
  88   1      } /* End of function */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     69    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
