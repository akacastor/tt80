>ID:escrpt
>VER1
>LIST

;*******************************************************************************
; TT30_Set_Execute_Only_Status.Escrpt
; ===================================
;
; $Revision: 1.1 $
; $Author: chin $ 
; $Date: 2005/11/01 13:55:47 $
;
;  ------------------------------------------------------
;  |Block index |R6 | R7  | Block size | Logical Address|
;  |----------------------------------------------------|
;  |     1      | 00 | 01  |    8k     |   0400 – 23FF  |
;  |     2      | 00 | 02  |    4k     |   2400 – 33FF  |
;  |     3      | 00 | 04  |    2k     |   3400 – 3BFF  |
;  |     4      | 00 | 08  |    2k     |   3C00 – 43FF  |
;  |     5      | 00 | 10  |    4k     |   4400 – 53FF  |
;  |     6      | 00 | 20  |    4k     |   5400 – 63FF  |
;  |     7      | 00 | 40  |    4k     |   6400 – 73FF  |
;  |     8      | 00 | 80  |    1k     |   7400 – 77FF  |
;  |     9      | 01 | 00  |    1k     |   7800 – 7BFF  |
;  ------------------------------------------------------
;
;  Test starts at block3 as the Generic as code finishes before this point
;  Last block not tested as bootloader resides here
;
; TT30 Set Execute Only Status test
; 1. Loads in TT30 memory defaults
; 2. Offers user selection of terminal to run the scripter at
; 3. Gets the ATR and compares it to the expected preset ATR value
; 4. Loads in APDU commands values
; 5. Read UCM area checking it is all FFh
; 6. Set Execute only for 3400 – 3BFF, 5400 – 63FF & 7400 – 77FF temporary
; 7. Check block boundaries for FFh or 00h
; 8. Reset the chip, it should lose the temporary set execute settings
; 9. Check block boundaries are all FFh indicating Set Execute status is clear
; 10. Set Execute only for 3400 – 3BFF, 5400 – 63FF & 7400 – 77FF permanent
; 11. Check block boundaries for FFh or 00h
; 12. Reset the chip, should retain the set execute settings as its permanent
; 13. Check block boundaries for FFh or 00h
;*******************************************************************************


$Include: ..\Support\TT30_Definitions.escrpt					; Load in the chip specific addresses

$Include: ..\Support\Select_Terminal.escrpt					; Select the terminal to run the scripter at

$Include: ..\Support\GetATR_and_Compare.escrpt					; Get ATR and compare it to known chip ATR response

$Include: ..\Support\Generic_Code_INS_Values.escrpt				; Load in the APDU command INS values

>SETVW: wAddress = 3400
>SETVW: UCM_END_ADDRESS = 7800							; Address of last block of UCM before the bootloader

;******************************************************************************
; 5. Read UCM area checking it is all FFh
;******************************************************************************
>DISPLAY0: Checking UCM bytes are all FFh 

>WHILE: (wAddress) <> (UCM_END_ADDRESS)

    >APDU: E5 (XDATA_Space_Memory_Dump) (wAddress) -- 00


    >CALC: wAddress = (wAddress) + 0100						; Point to the next address
>LOOP


;******************************************************************************
; 6. Set Execute only for 3400 – 3BFF, 5400 – 63FF & 7400 – 77FF
;    Para2 is 0, temporary setting
;    00 54 is block 3 3400 - 3BFF
;             block 5 4400 - 53FF
;             block 7 6400 - 73FF
;******************************************************************************
>APDU: E5 (Set_Execute_Only_Status) 00 00 02 -- 00 54
>COMP: SW1SW2 = 9000


;******************************************************************************
; 7. Check block boundaries for FFh or 00h
;******************************************************************************
>DISPLAY0: Checking block boundaries for either all zeros for execute only blocks or all FFh

>APDU: E5 (XDATA_Space_Memory_Dump) 34 00 -- 08					; Read 8 bytes of block 3 start, pattern should be
>COMP: RAPDU = 00 00 00 00 00 00 00 00						; all zeros as this block is execute only

>APDU: E5 (XDATA_Space_Memory_Dump) 3B F8 -- 10					; Read 16 bytes of block 3 - block 4 boundary
>COMP: RAPDU = 00 00 00 00 00 00 00 00 FF FF FF FF FF FF FF FF			; End of block 3 should be all zeros as this block is execute only

>APDU: E5 (XDATA_Space_Memory_Dump) 43 F8 -- 10					; Read 16 bytes of block 4 - block 5 boundary
>COMP: RAPDU = FF FF FF FF FF FF FF FF 00 00 00 00 00 00 00 00			; Start of block 4 should be all zeros as this block is execute only

>APDU: E5 (XDATA_Space_Memory_Dump) 53 F8 -- 10					; Read 16 bytes of block 5 - block 6 boundary
>COMP: RAPDU = 00 00 00 00 00 00 00 00 FF FF FF FF FF FF FF FF			; End of block 5 should be all zeros as this block is execute only

>APDU: E5 (XDATA_Space_Memory_Dump) 63 F8 -- 10					; Read 16 bytes of block 6 - block 7 boundary
>COMP: RAPDU = FF FF FF FF FF FF FF FF 00 00 00 00 00 00 00 00			; Start of block 7 should be all zeros as this block is execute only

>APDU: E5 (XDATA_Space_Memory_Dump) 73 F8 -- 10					; Read 16 bytes of block 7 - block 8 boundary
>COMP: RAPDU = 00 00 00 00 00 00 00 00 FF FF FF FF FF FF FF FF			; End of block 7 should be all zeros as this block is execute only

>APDU: E5 (XDATA_Space_Memory_Dump) 77 F8 -- 08					; Read 8 bytes of block 8 end, pattern should be
>COMP: RAPDU = FF FF FF FF FF FF FF FF						; all FFh as this block is not execute only

;******************************************************************************
; 8. Reset the chip, it should lose the temporary set execute settings
;******************************************************************************
>TERM: GetATR									; Reset the chip - it will lose the Set Protect settings

;******************************************************************************
; 9. Check block boundaries are all FFh indicating Set Execute status is clear
;******************************************************************************
>DISPLAY0: Checking block boundaries for FFh

>APDU: E5 (XDATA_Space_Memory_Dump) 34 00 -- 08					; Read 8 bytes of block 3 start
>COMP: RAPDU = FF FF FF FF FF FF FF FF

>APDU: E5 (XDATA_Space_Memory_Dump) 3B F8 -- 10					; Read 16 bytes of block 3 - block 4 boundary
>COMP: RAPDU = FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF

>APDU: E5 (XDATA_Space_Memory_Dump) 43 F8 -- 10					; Read 16 bytes of block 4 - block 5 boundary
>COMP: RAPDU = FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF

>APDU: E5 (XDATA_Space_Memory_Dump) 53 F8 -- 10					; Read 16 bytes of block 5 - block 6 boundary
>COMP: RAPDU = FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF

>APDU: E5 (XDATA_Space_Memory_Dump) 63 F8 -- 10					; Read 16 bytes of block 6 - block 7 boundary
>COMP: RAPDU = FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF

>APDU: E5 (XDATA_Space_Memory_Dump) 73 F8 -- 10					; Read 16 bytes of block 7 - block 8 boundary
>COMP: RAPDU = FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF

>APDU: E5 (XDATA_Space_Memory_Dump) 77 F8 -- 08					; Read 8 bytes of block 8 end, pattern should be
>COMP: RAPDU = FF FF FF FF FF FF FF FF						; all FFh as this block is not execute only

;******************************************************************************
; 10. Set Execute only for 3400 – 3BFF, 5400 – 63FF & 7400 – 77FF
;     Para2 is 1, permanent setting
;     00 54 is block 3 3400 - 3BFF
;              block 5 4400 - 53FF
;              block 7 6400 - 73FF
;******************************************************************************
>APDU: E5 (Set_Execute_Only_Status) 00 01 02 -- 00 54
>COMP: SW1SW2 = 9000

;******************************************************************************
; 11. Check block boundaries for FFh or 00h
;******************************************************************************
>DISPLAY0: Checking block boundaries for either all zeros for execute only blocks or all FFh

>APDU: E5 (XDATA_Space_Memory_Dump) 34 00 -- 08					; Read 8 bytes of block 3 start, pattern should be
>COMP: RAPDU = 00 00 00 00 00 00 00 00						; all zeros as this block is execute only

>APDU: E5 (XDATA_Space_Memory_Dump) 3B F8 -- 10					; Read 16 bytes of block 3 - block 4 boundary
>COMP: RAPDU = 00 00 00 00 00 00 00 00 FF FF FF FF FF FF FF FF			; End of block 3 should be all zeros as this block is execute only

>APDU: E5 (XDATA_Space_Memory_Dump) 43 F8 -- 10					; Read 16 bytes of block 4 - block 5 boundary
>COMP: RAPDU = FF FF FF FF FF FF FF FF 00 00 00 00 00 00 00 00			; Start of block 4 should be all zeros as this block is execute only

>APDU: E5 (XDATA_Space_Memory_Dump) 53 F8 -- 10					; Read 16 bytes of block 5 - block 6 boundary
>COMP: RAPDU = 00 00 00 00 00 00 00 00 FF FF FF FF FF FF FF FF			; End of block 5 should be all zeros as this block is execute only

>APDU: E5 (XDATA_Space_Memory_Dump) 63 F8 -- 10					; Read 16 bytes of block 6 - block 7 boundary
>COMP: RAPDU = FF FF FF FF FF FF FF FF 00 00 00 00 00 00 00 00			; Start of block 7 should be all zeros as this block is execute only

>APDU: E5 (XDATA_Space_Memory_Dump) 73 F8 -- 10					; Read 16 bytes of block 7 - block 8 boundary
>COMP: RAPDU = 00 00 00 00 00 00 00 00 FF FF FF FF FF FF FF FF			; End of block 7 should be all zeros as this block is execute only

>APDU: E5 (XDATA_Space_Memory_Dump) 77 F8 -- 08					; Read 8 bytes of block 8 end, pattern should be
>COMP: RAPDU = FF FF FF FF FF FF FF FF						; all FFh as this block is not execute only

;******************************************************************************
; 12. Reset the chip, should retain the set execute settings as its permanent
;******************************************************************************
>TERM: GetATR									; Reset the chip - it will lose the Set Protect settings

;******************************************************************************
; 13. Check block boundaries for FFh or 00h
;******************************************************************************
>DISPLAY0: Checking block boundaries for either all zeros for execute only blocks or all FFh

>APDU: E5 (XDATA_Space_Memory_Dump) 34 00 -- 08					; Read 8 bytes of block 3 start, pattern should be
>COMP: RAPDU = 00 00 00 00 00 00 00 00						; all zeros as this block is execute only

>APDU: E5 (XDATA_Space_Memory_Dump) 3B F8 -- 10					; Read 16 bytes of block 3 - block 4 boundary
>COMP: RAPDU = 00 00 00 00 00 00 00 00 FF FF FF FF FF FF FF FF			; End of block 3 should be all zeros as this block is execute only

>APDU: E5 (XDATA_Space_Memory_Dump) 43 F8 -- 10					; Read 16 bytes of block 4 - block 5 boundary
>COMP: RAPDU = FF FF FF FF FF FF FF FF 00 00 00 00 00 00 00 00			; Start of block 4 should be all zeros as this block is execute only

>APDU: E5 (XDATA_Space_Memory_Dump) 53 F8 -- 10					; Read 16 bytes of block 5 - block 6 boundary
>COMP: RAPDU = 00 00 00 00 00 00 00 00 FF FF FF FF FF FF FF FF			; End of block 5 should be all zeros as this block is execute only

>APDU: E5 (XDATA_Space_Memory_Dump) 63 F8 -- 10					; Read 16 bytes of block 6 - block 7 boundary
>COMP: RAPDU = FF FF FF FF FF FF FF FF 00 00 00 00 00 00 00 00			; Start of block 7 should be all zeros as this block is execute only

>APDU: E5 (XDATA_Space_Memory_Dump) 73 F8 -- 10					; Read 16 bytes of block 7 - block 8 boundary
>COMP: RAPDU = 00 00 00 00 00 00 00 00 FF FF FF FF FF FF FF FF			; End of block 7 should be all zeros as this block is execute only

>APDU: E5 (XDATA_Space_Memory_Dump) 77 F8 -- 08					; Read 8 bytes of block 8 end, pattern should be
>COMP: RAPDU = FF FF FF FF FF FF FF FF						; all FFh as this block is not execute only


>DISPLAY2: Test completed for Set Execute Only

>ENDL