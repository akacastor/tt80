C51 COMPILER V7.50   TP40_MASSERASEEE_BOOTLOADER_SAFE                                      12/29/2006 16:28:10 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE TP40_MASSERASEEE_BOOTLOADER_SAFE
OBJECT MODULE PLACED IN TP40_MassEraseEE_Bootloader_Safe.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE TP40_MassEraseEE_Bootloader_Safe.c BROWSE INTVECTOR(0X8000) DEBUG OBJECTEXT
                    -END

line level    source

   1          /******************************************************************************
   2          *
   3          * Name:         TP40_MassEraseEE_Bootloader_Safe.c
   4          * Description:  Contains function to erase entire EEPROM excluding the bootloader
   5          * Copyright:    Emosyn Inc. 2005
   6          *
   7          * The Example Code herein below is provided "AS IS" and at your sole risk.  
   8          * As to this Code, EMOSYN expressly disclaims all warranties, including, but
   9          * not limited to the implied warranties of merchantability and fitness for a
  10          * particular purpose. EMOSYN does not warrant that the functions contained in
  11          * this code will meet your requirements, or that the operation of the code will
  12          * be accurate, error-free, or non-infringing. No oral or written information or
  13          * advice given by EMOSYN or an authorized representative shall create or affect
  14          * any Warranty.
  15          *******************************************************************************
  16          * $Revision: 1.3 $
  17          * $Author: chin $ 
  18          * $Date: 2005/10/25 11:23:54 $
  19          ******************************************************************************/
  20          
  21          
  22          /******************************************************************************
  23          * Header file inclusions
  24          ******************************************************************************/
  25          #include "Firmware_API_JumpTable.h"
  26          #include "Emosyn_Helper_Functions.h"
  27          
  28          
  29          /******************************************************************************
  30          * External and local function declarations 
  31          ******************************************************************************/
  32          
  33          
  34          /******************************************************************************
  35          * External variable declarations
  36          ******************************************************************************/
  37          
  38          
  39          /******************************************************************************
  40          *
  41          * Function Name:      TheseusPlatinum_EE_MassErase_Bootloader_Safe
  42          * Function Inputs:    void
  43          * Function Outputs:   uint SW1SW2  9000h for success or 6581h for failure
  44          * Description:        Erases entire EEPROM excluding the bootloader
  45          *
  46          * APDU Syntax:        E5 8A 00 00 00
  47          * APDU Inputs:        None
  48          * APDU Outputs:       None
  49          *
  50          * Example usage:      Erase entire EEPROM excluding the bootloader
  51          * To Card             ->  E5 8A 00 00 00
  52          * ACK from Card       <-  8A
  53          * Response from Card  <-  90 00
  54          *
C51 COMPILER V7.50   TP40_MASSERASEEE_BOOTLOADER_SAFE                                      12/29/2006 16:28:10 PAGE 2   

  55          ******************************************************************************/
  56          uint TheseusPlatinum_EE_MassErase_Bootloader_Safe (void)
  57          {
  58   1          /* Setup the result as pass */
  59   1          SW1SW2 = SW1SW2_OK;
  60   1      
  61   1          /* Loop round erasing 64 bytes of EEPROM until finished or erase failure */
  62   1          for (uiTemp_Address = 0x4000; uiTemp_Address < BOOTLOADER_START_ADDRESS; uiTemp_Address += 64)
  63   1          {
  64   2              if (Firmware_EraseEE64Bytes (uiTemp_Address) < 0)
  65   2              {
  66   3                  SW1SW2 = SW1SW2_MEMORY_ERROR;
  67   3                  break;
  68   3              }
  69   2          }
  70   1      
  71   1      
  72   1          return SW1SW2;
  73   1      
  74   1      } /* End of function */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     67    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
