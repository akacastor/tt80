C51 COMPILER V7.50   TIMER0_FUNCTIONS                                                      12/12/2006 14:05:40 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE TIMER0_FUNCTIONS
OBJECT MODULE PLACED IN .\Timer0_Functions.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\Common_Titanium\Timer0_Functions.c OMF2 ROM(D512K) OPTIMIZE(SIZE) BROWSE
                    - INTVECTOR(0X0800) DEFINE(EXTENDED_ADDRESSING) VARBANKING DEBUG PRINT(.\Timer0_Functions.lst) OBJECT(.\Timer0_Functions.
                    -obj)

line level    source

   1          /******************************************************************************
   2          *
   3          * Name:         Timer0_Functions.c
   4          * Description:  Contains function to set the configuration and enabling and 
   5          *               disabling of Timer0
   6          * Copyright:    Emosyn Inc. 2006
   7          *
   8          * The Example Code herein below is provided "AS IS" and at your sole risk.  
   9          * As to this Code, EMOSYN expressly disclaims all warranties, including, but
  10          * not limited to the implied warranties of merchantability and fitness for a
  11          * particular purpose. EMOSYN does not warrant that the functions contained in
  12          * this code will meet your requirements, or that the operation of the code will
  13          * be accurate, error-free, or non-infringing. No oral or written information or
  14          * advice given by EMOSYN or an authorized representative shall create or affect
  15          * any Warranty.
  16          *******************************************************************************
  17          * $Revision: 1.5 $
  18          * $Author: dhunter $ 
  19          * $Date: 2006/09/07 21:26:00 $
  20          ******************************************************************************/
  21          
  22          
  23          /******************************************************************************
  24          * Header file inclusions
  25          ******************************************************************************/
  26          #include "Firmware_API_JumpTable.h"
  27          #include "Emosyn_Helper_Functions.h"
  28          
  29          
  30          /******************************************************************************
  31          * External and local function declarations 
  32          ******************************************************************************/
  33          void Timer0_Setup (uint wCounter, uchar bMode);
  34          
  35          
  36          /******************************************************************************
  37          * External variable declarations
  38          ******************************************************************************/
  39          
  40          
  41          /******************************************************************************
  42          *
  43          * Function Name:      Timer0_Start
  44          * Function Inputs:    void
  45          * Function Outputs:   uint SW1SW2_OK  9000h
  46          * Description:        Sets up Timer0 and then starts it
  47          *
  48          * APDU Syntax:        E5 4A PARA1 PARA2 01
  49          * APDU Inputs:        PARA1      High part of Counter Value
  50          ;                     PARA2      Low part of Counter Value
  51          *                     DataByte1  Timer Mode
  52          * APDU Outputs:       None
  53          
C51 COMPILER V7.50   TIMER0_FUNCTIONS                                                      12/12/2006 14:05:40 PAGE 2   

  54          * Example usage:      Setup Timer 0 for maximum delay (0000) in Mode 1 
  55          * To Card             ->  E5 4A 00 00 08
  56          * ACK from Card       <-  4A
  57          * Data from Card      ->  01
  58          * Response from Card  <-  90 00
  59          *
  60          ******************************************************************************/
  61          uint Timer0_Start (void)
  62          {
  63   1          /* Get Mode byte */
  64   1          uchar bTimerMode = GetChar();
  65   1      
  66   1          /* Get the high byte of counter */
  67   1          uint wTimerCounterValue = PARA1 << 8;
  68   1      
  69   1          /* Get the low byte of counter */
  70   1          wTimerCounterValue = wTimerCounterValue | PARA2;
  71   1      
  72   1          /* Call the Timer0 setup and start function */ 
  73   1          Timer0_Setup (wTimerCounterValue, bTimerMode);
  74   1      
  75   1          /* Return status word 0f 9000h */
  76   1          return SW1SW2_OK;
  77   1      }
  78          
  79          
  80          /******************************************************************************
  81          *
  82          * Function Name:      Timer0_Setup
  83          * Function Inputs:    uint wCounter
  84          *                     uchar bMode
  85          * Function Outputs:   None
  86          * Description:        Enabled Timer0 Interrupt
  87          *                     Load Timer0 with wCounter and bMode
  88          *                     Start Timer0
  89          *
  90          ******************************************************************************/
  91          void Timer0_Setup (uint wCounter, uchar bMode)
  92          {
  93   1          TR0 = 0;                                /* Turn off Timer 0 */
  94   1          TF0 = 0;                                /* Clear Timer 0 Overflow flag */
  95   1      
  96   1          /* Set bit ET0 (Timer0 Interrupt Enable) */
  97   1      #ifdef EMULATOR
                  Firmware_SetInterruptEnable (Firmware_GetInterruptEnable() | 0x02);
              #else
 100   1          IE = IE | 0x02;
 101   1      #endif
 102   1      
 103   1          TMOD = TMOD & 0xF0;                     /* Reset Timer 0 */
 104   1          TMOD = TMOD | bMode;                    /* Set Timer 0 with parameter mode */
 105   1      
 106   1          TH0 = (wCounter & 0xFF00) >> 8;         /* Load in high value of counter */
 107   1          TL0 = wCounter & 0xFF;                  /* Load in low value of counter */
 108   1      
 109   1          TR0 = 1;                                /* Turn On Timer 0 */
 110   1      }
 111          
 112          
 113          /******************************************************************************
 114          *
 115          * Function Name:      Timer0_Stop
C51 COMPILER V7.50   TIMER0_FUNCTIONS                                                      12/12/2006 14:05:40 PAGE 3   

 116          * Function Inputs:    void
 117          * Function Outputs:   uint SW1SW2_OK  0x9000
 118          * Description:        Turns off Timer0 and disables the Timer0 Interrupt
 119          *
 120          * APDU Syntax:        E5 4E 00 00 00
 121          * APDU Inputs:        None
 122          * APDU Outputs:       None
 123          
 124          * Example usage:      Turn off Timer0
 125          * To Card             ->  E5 4E 00 00 00
 126          * ACK from Card       <-  4E
 127          * Response from Card  <-  90 00
 128          *
 129          ******************************************************************************/
 130          uint Timer0_Stop( void)
 131          {
 132   1          /* Clear bit ET0 (Timer0 Interrupt) */
 133   1      #ifdef EMULATOR
                  Firmware_SetInterruptEnable (Firmware_GetInterruptEnable() & 0xFD);
              #else
 136   1          IE = IE & 0xFD;
 137   1      #endif
 138   1      
 139   1          TR0 = 0;                                /* Turn off Timer 0 */
 140   1      
 141   1          /* Return status word 0f 9000h */
 142   1          return SW1SW2_OK;
 143   1      }
 144          
 145          /******************************************************************************
 146          *
 147          * Function Name:      Timer0_Read
 148          * Function Inputs:    void
 149          * Function Outputs:   uint SW1SW2_OK  0x9000
 150          * Description:        Outputs status of Timer0 (SFR's, interrupt count)
 151          *
 152          * APDU Syntax:        E5 5C 00 00 05
 153          * APDU Inputs:        None
 154          * APDU Outputs:       5 bytes of data:
 155          *                     Byte 0: TCON
 156          *                     Byte 1: TMOD
 157          *                     Byte 2: TL0
 158          *                     Byte 3: TH0
 159          *                     Byte 4: Timer0 interrupt counter
 160          
 161          * Example usage:      Read Timer0 (after reset)
 162          * To Card             ->  E5 5C 00 00 05
 163          * ACK from Card       <-  5C
 164          * Data from Card      <-  00 00 00 00 00
 165          * Response from Card  <-  90 00
 166          *
 167          ******************************************************************************/
 168          uint Timer0_Read( void)
 169          {
 170   1              /* Gather Timer0 status for output. */
 171   1              TEMPVARIABLE1 = TCON;
 172   1              TEMPVARIABLE2 = TMOD;
 173   1              TEMPVARIABLE3 = TL0;
 174   1              TEMPVARIABLE4 = TH0;
 175   1              TEMPVARIABLE5 = Timer0_Int_Count;
 176   1      
 177   1          if (PARA3 == 0x05)
C51 COMPILER V7.50   TIMER0_FUNCTIONS                                                      12/12/2006 14:05:40 PAGE 4   

 178   1          {
 179   2                      PutChar (TEMPVARIABLE1);
 180   2                      PutChar (TEMPVARIABLE2);
 181   2                      PutChar (TEMPVARIABLE3);
 182   2                      PutChar (TEMPVARIABLE4);
 183   2                      PutChar (TEMPVARIABLE5);
 184   2      
 185   2              SW1SW2 = SW1SW2_OK;
 186   2          }
 187   1          else
 188   1          {
 189   2              SW1SW2 = SW1SW2_WRONG_LE_LENGTH;    /* Only allow a LE of 5 */
 190   2          }
 191   1      
 192   1          return SW1SW2;
 193   1      }
 194          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    141    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
