C51 COMPILER V8.05a   GET_DIAGNOSTIC_DATA                                                  01/25/2007 14:37:18 PAGE 1   


C51 COMPILER V8.05a, COMPILATION OF MODULE GET_DIAGNOSTIC_DATA
OBJECT MODULE PLACED IN .\Get_Diagnostic_Data.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\Common\Get_Diagnostic_Data.c OMF2 OPTIMIZE(SIZE) BROWSE INTVECTOR(0X0400
                    -) MODDP2 DEBUG PRINT(.\Get_Diagnostic_Data.lst) OBJECT(.\Get_Diagnostic_Data.obj)

line level    source

   1          /******************************************************************************
   2          *
   3          * Name:         Get_Diagnostic_Data.c
   4          * Description:  Contains function to output the diagnostic data in logged in
   5          *               the firmware
   6          * Copyright:    Emosyn Inc. 2005
   7          *
   8          * The Example Code herein below is provided "AS IS" and at your sole risk.  
   9          * As to this Code, EMOSYN expressly disclaims all warranties, including, but
  10          * not limited to the implied warranties of merchantability and fitness for a
  11          * particular purpose. EMOSYN does not warrant that the functions contained in
  12          * this code will meet your requirements, or that the operation of the code will
  13          * be accurate, error-free, or non-infringing. No oral or written information or
  14          * advice given by EMOSYN or an authorized representative shall create or affect
  15          * any Warranty.
  16          *******************************************************************************
  17          * $Revision: 1.5 $
  18          * $Author: chin $ 
  19          * $Date: 2005/11/01 18:43:58 $
  20          ******************************************************************************/
  21          
  22          
  23          /******************************************************************************
  24          * Header file inclusions
  25          ******************************************************************************/
  26          #include "Firmware_API_JumpTable.h"
  27          #include "Emosyn_Helper_Functions.h"
  28          
  29          
  30          /******************************************************************************
  31          * External and local function declarations 
  32          ******************************************************************************/
  33          
  34          
  35          /******************************************************************************
  36          * External variable declarations
  37          ******************************************************************************/
  38          
  39          
  40          /******************************************************************************
  41          *
  42          * Function Name:      Get_Diagnostic_Data
  43          * Function Inputs:    void
  44          * Function Outputs:   uint SW1SW2  9000h for success or
  45          *                                  6C00h for wrong LE
  46          * Description:        Outputs the diagnostic data from the firmware to the serial port
  47          *
  48          * APDU Syntax:        E5 54 00 00 08
  49          * APDU Inputs:        None
  50          * APDU Outputs:       8 bytes of diagnostic data
  51          *
  52          * Example usage:      Get the diagnostic data from the firmware
  53          * To Card             ->  E5 54 00 00 08
  54          * ACK from Card       <-  54
C51 COMPILER V8.05a   GET_DIAGNOSTIC_DATA                                                  01/25/2007 14:37:18 PAGE 2   

  55          * Data from Card      <-  8 bytes of diagnostic data
  56          * Response from Card  <-  90 00
  57          *
  58          ******************************************************************************/
  59          uint Get_Diagnostic_Data (void)
  60          {
  61   1          if (PARA3 == TEMP_BUFFER_SIZE) /* Only allow eight byte response */
  62   1          {
  63   2                  for (ucCount = 0; ucCount < TEMP_BUFFER_SIZE; ucCount++)   /* Clear the buffer with 0x00 pattern */
  64   2                  {
  65   3                      TEMP_BUF[ucCount] = 0x00;
  66   3                  }
  67   2              
  68   2                  Firmware_GetDiagnosticData (&TEMP_BUF);     /* Actual firmware API call */
  69   2              
  70   2                  Serial_Transmit_X_Bytes (TEMP_BUFFER_SIZE, &TEMP_BUF);  /* Tranmsit the data */
  71   2      
  72   2                      SW1SW2 = SW1SW2_OK;
  73   2          }
  74   1              else
  75   1          {
  76   2              SW1SW2 = SW1SW2_WRONG_LE_LENGTH;                
  77   2          }
  78   1      
  79   1          return SW1SW2;
  80   1      
  81   1      } /* End of function */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     63    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
