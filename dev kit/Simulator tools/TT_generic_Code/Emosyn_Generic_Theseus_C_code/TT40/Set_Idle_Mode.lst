C51 COMPILER V8.05a   SET_IDLE_MODE                                                        01/25/2007 14:37:13 PAGE 1   


C51 COMPILER V8.05a, COMPILATION OF MODULE SET_IDLE_MODE
OBJECT MODULE PLACED IN .\Set_Idle_Mode.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\Common\Set_Idle_Mode.c OMF2 OPTIMIZE(SIZE) BROWSE INTVECTOR(0X0400) MODD
                    -P2 DEBUG PRINT(.\Set_Idle_Mode.lst) OBJECT(.\Set_Idle_Mode.obj)

line level    source

   1          /******************************************************************************
   2          *
   3          * Name:         Set_Idle_Mode.c
   4          * Description:  Contains function to set and get the idle mode
   5          * Copyright:    Emosyn Inc. 2005
   6          *
   7          * The Example Code herein below is provided "AS IS" and at your sole risk.  
   8          * As to this Code, EMOSYN expressly disclaims all warranties, including, but
   9          * not limited to the implied warranties of merchantability and fitness for a
  10          * particular purpose. EMOSYN does not warrant that the functions contained in
  11          * this code will meet your requirements, or that the operation of the code will
  12          * be accurate, error-free, or non-infringing. No oral or written information or
  13          * advice given by EMOSYN or an authorized representative shall create or affect
  14          * any Warranty.
  15          *******************************************************************************
  16          * $Revision: 1.4 $
  17          * $Author: chin $ 
  18          * $Date: 2006/02/22 15:47:08 $
  19          ******************************************************************************/
  20          
  21          
  22          /******************************************************************************
  23          * Header file inclusions
  24          ******************************************************************************/
  25          #include "Firmware_API_JumpTable.h"
  26          #include "Emosyn_Helper_Functions.h"
  27          
  28          
  29          /******************************************************************************
  30          * External and local function declarations 
  31          ******************************************************************************/
  32          
  33          
  34          /******************************************************************************
  35          * External variable declarations
  36          ******************************************************************************/
  37          
  38          
  39          /******************************************************************************
  40          *
  41          * Function Name:      Set_Idle_Mode
  42          * Function Inputs:    void
  43          * Function Outputs:   uint SW1SW2_OK  9000h
  44          * Description:        Sets the mode bit that determines normal or deep idle
  45          *                     during the waiting stage of receiving an APDU
  46          *
  47          * APDU Syntax:        E5 5A PARA1 00 00
  48          * APDU Inputs:        PARA1  Deep Idle Mode On = 0x01; Normal Idle Mode = 0
  49          * APDU Outputs:       None
  50          *
  51          * Example usage:      Enable Deep Idle mode
  52          * To Card             ->  E5 5A 01 00 00
  53          * ACK from Card       <-  5A
  54          * Response from Card  <-  90 00
C51 COMPILER V8.05a   SET_IDLE_MODE                                                        01/25/2007 14:37:13 PAGE 2   

  55          *
  56          ******************************************************************************/
  57          uint Set_Idle_Mode (void)
  58          {
  59   1          IDLE_MODE = PARA1 & 0x01; /* Copy bit zero into Idle mode varible */
  60   1      
  61   1          return SW1SW2_OK;
  62   1      
  63   1      } /* End of function */
  64          
  65          
  66          /******************************************************************************
  67          *
  68          * Function Name:      Get_Idle_Mode
  69          * Function Inputs:    void
  70          * Function Outputs:   uint SW1SW2  9000h for success or
  71          *                                  6C00h for wrong LE
  72          * Description:        Outputs the variable that determines normal or deep idle
  73          *                     during the waiting stage of receiving an APDU
  74          *
  75          * APDU Syntax:        E5 E8 00 00 01
  76          * APDU Inputs:        None
  77          * APDU Outputs:       Value of the IDLE mode variable
  78          *
  79          * Example usage:      Get the Idle mode value
  80          * To Card             ->  E5 E8 00 00 01
  81          * ACK from Card       <-  E8
  82          * Data from Card      <-  01
  83          * Response from Card  <-  90 00
  84          *
  85          ******************************************************************************/
  86          uint Get_Idle_Mode (void)
  87          {
  88   1          if (PARA3 == 0x01)
  89   1          {
  90   2              PutChar (IDLE_MODE);                /* Output the idle mode variable */
  91   2      
  92   2              SW1SW2 = SW1SW2_OK;
  93   2          }
  94   1          else
  95   1          {
  96   2              SW1SW2 = SW1SW2_WRONG_LE_LENGTH;    /* Only allow a LE of 1 */
  97   2          }
  98   1      
  99   1          return SW1SW2;
 100   1      
 101   1      } /* End of function */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     47    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V8.05a   SET_IDLE_MODE                                                        01/25/2007 14:37:13 PAGE 3   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
